int NUMBER9[]={1,1,1,1,0,0,0,1,
               1,0,0,1,0,0,0,1,
               1,0,0,1,0,0,0,1,
               1,0,0,1,0,0,0,1,
               1,1,1,1,1,1,1,1};
 int NUMBER8[]={0,1,1,0,1,1,1,0,
                1,0,0,1,0,0,0,1,
                1,0,0,1,0,0,0,1,
                1,0,0,1,0,0,0,1,
                0,1,1,0,1,1,1,0};
 int NUMBER7[]={1,0,0,0,0,0,0,0,
                1,0,0,0,1,0,0,0,
                1,0,0,0,1,0,0,0,
                1,0,0,1,1,1,1,1,
                1,1,1,0,1,0,0,0};
 int NUMBER6[]={1,1,1,1,1,1,1,1,
                1,0,0,0,1,0,0,1,
                1,0,0,0,1,0,0,1,
                1,0,0,0,1,0,0,1,
                1,0,0,0,1,1,1,1};
 int NUMBER5[]={1,1,1,1,1,0,0,1,
                1,0,0,0,1,0,0,1,
                1,0,0,0,1,0,0,1,
                1,0,0,0,1,0,0,1,
                1,0,0,0,1,1,1,1};
 int NUMBER2[]= {1,0,0,0,0,0,1,1,
                 1,0,0,0,0,1,0,1,
                 1,0,0,0,1,0,0,1,
                 1,0,0,1,0,0,0,1,
                 0,1,1,0,0,0,0,1};
 int NUMBER1[]= {0,0,1,0,0,0,0,0,
                 0,1,0,0,0,0,0,0,
                 1,1,1,1,1,1,1,1,
                 0,0,0,0,0,0,0,0,
                 0,0,0,0,0,0,0,0};
 int NUMBER0[]= {1,1,1,1,1,1,1,1,
                 1,0,0,0,0,0,0,1,
                 1,0,0,0,0,0,0,1,
                 1,0,0,0,0,0,0,1,
                 1,1,1,1,1,1,1,1};

 int _[] = {0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0};
 int A[] = {1,1,1,1,1,1,1,1,
            1,0,0,1,0,0,0,0,
            1,0,0,1,0,0,0,0,
            1,0,0,1,0,0,0,0,
            1,1,1,1,1,1,1,1};
 int B[] = {1,1,1,1,1,1,1,1,
            1,0,0,1,0,0,0,1,
            1,0,0,1,0,0,0,1,
            1,0,0,1,0,0,0,1,
            0,1,1,0,1,1,1,0};
 int C[] = {0,0,1,1,1,1,0,0,
            0,1,0,0,0,0,1,0,
            1,0,0,0,0,0,0,1,
            1,0,0,0,0,0,0,1,
            1,0,0,0,0,0,0,1};
 int D[] = {1,1,1,1,1,1,1,1,
            1,0,0,0,0,0,0,1,
            1,0,0,0,0,0,0,1,
            0,1,0,0,0,0,1,0,
            0,0,1,1,1,1,0,0};
 int E[] = {1,1,1,1,1,1,1,1,
            1,0,0,1,0,0,0,1,
            1,0,0,1,0,0,0,1,
            1,0,0,1,0,0,0,1,
            1,0,0,1,0,0,0,1};
 int F[] = {1,1,1,1,1,1,1,1,
            1,0,0,1,0,0,0,0,
            1,0,0,1,0,0,0,0,
            1,0,0,1,0,0,0,0,
            1,0,0,1,0,0,0,0};
 int G[] = {0,1,1,1,1,1,1,1,
            1,0,0,0,0,0,0,1,
            1,0,0,0,1,0,0,1,
            1,0,0,0,1,0,0,1,
            1,0,0,0,1,1,1,0};
 int H[] = {1,1,1,1,1,1,1,1,
            0,0,0,0,1,0,0,0,
            0,0,0,0,1,0,0,0,
            0,0,0,0,1,0,0,0,
            1,1,1,1,1,1,1,1};
 int I[] = {1,0,0,0,0,0,0,1,
            1,0,0,0,0,0,0,1,
            1,1,1,1,1,1,1,1,
            1,0,0,0,0,0,0,1,
            1,0,0,0,0,0,0,1};
 int J[] = {0,0,0,0,0,1,1,0,
            0,0,0,0,1,0,0,1,
            0,0,0,0,0,0,0,1,
            0,0,0,0,0,0,0,1,
            1,1,1,1,1,1,1,0};
 int K[] = {1,1,1,1,1,1,1,1, 0,0,0,1,1,0,0,0, 0,0,1,0,0,1,0,0, 0,1,0,0,0,0,1,0, 1,0,0,0,0,0,0,1};
 int L[] = {1,1,1,1,1,1,1,1, 0,0,0,0,0,0,0,1, 0,0,0,0,0,0,0,1, 0,0,0,0,0,0,0,1, 0,0,0,0,0,0,0,1};
 int M[] = {1,1,1,1,1,1,1,1, 0,1,0,0,0,0,0,0, 0,0,1,0,0,0,0,0, 0,1,0,0,0,0,0,0, 1,1,1,1,1,1,1,1};
 int N[] = {1,1,1,1,1,1,1,1, 0,0,1,0,0,0,0,0, 0,0,0,1,1,0,0,0, 0,0,0,0,0,1,0,0, 1,1,1,1,1,1,1,1};
 int O[] = {0,1,1,1,1,1,1,1,0,
            1,0,0,0,0,0,0,0,1,
            1,0,0,0,0,0,0,0,1,
            1,0,0,0,0,0,0,0,1,
            0,1,1,1,1,1,1,1,0};
 int P[] = {1,1,1,1,1,1,1,1, 1,0,0,1,0,0,0,0, 1,0,0,1,0,0,0,0, 1,0,0,1,0,0,0,0, 0,1,1,0,0,0,0,0};
 int Q[] = {0,1,1,1,1,1,1,0, 1,0,0,0,0,0,0,1, 1,0,0,0,0,1,0,1, 0,1,1,1,1,1,1,0, 0,0,0,0,0,0,0,1};
 int R[] = {1,1,1,1,1,1,1,1, 1,0,0,1,1,0,0,0, 1,0,0,1,0,1,0,0, 1,0,0,1,0,0,1,0, 0,1,1,0,0,0,0,1};
 int S[] = {0,1,1,1,0,0,0,1, 1,0,0,0,1,0,0,1, 1,0,0,0,1,0,0,1, 1,0,0,0,1,0,0,1, 1,0,0,0,1,1,1,0};
 int T[] = {1,0,0,0,0,0,0,0, 1,0,0,0,0,0,0,0, 1,1,1,1,1,1,1,1, 1,0,0,0,0,0,0,0, 1,0,0,0,0,0,0,0};
 int U[] = {1,1,1,1,1,1,1,0, 0,0,0,0,0,0,0,1, 0,0,0,0,0,0,0,1, 0,0,0,0,0,0,0,1, 1,1,1,1,1,1,1,0};
 int V[] = {1,1,1,1,1,1,0,0, 0,0,0,0,0,0,1,0, 0,0,0,0,0,0,0,1, 0,0,0,0,0,0,1,0, 1,1,1,1,1,1,0,0};
 int W[] = {1,1,1,1,1,1,1,1, 0,0,0,0,0,0,1,0, 0,0,0,0,0,1,0,0, 0,0,0,0,0,0,1,0, 1,1,1,1,1,1,1,1};
 int X[] = {1,1,0,0,0,0,1,1, 0,0,1,0,0,1,0,0, 0,0,0,1,1,0,0,0, 0,0,1,0,0,1,0,0, 1,1,0,0,0,0,1,1};
 int Y[] = {1,1,0,0,0,0,0,0, 0,0,1,0,0,0,0,0, 0,0,0,1,1,1,1,1, 0,0,1,0,0,0,0,0, 1,1,0,0,0,0,0,0};
 int Z[] = {1,0,0,0,0,1,1,1, 1,0,0,0,1,0,0,1, 1,0,0,1,0,0,0,1, 1,0,1,0,0,0,0,1, 1,1,0,0,0,0,0,1};
 int* alpha[]= {A,B,C,D,E,F,G,H,I,J,K,L,M,N};//,T,U,V,W,X,Y,Z};
 int letterSpace=2;
 int dotTime=1;
 int start_gap=90;
  int ch;
void setup()
{
 Serial.begin(9600);
// setting the ports of the leds to OUTPUT
 for( int i = 2; i<10 ;i++ )
 { pinMode(i, OUTPUT);
 }
 
 //input ir digital value
 pinMode(11,OUTPUT);//ir led or +5v
 pinMode(12,INPUT);//data pin
 pinMode(A7,OUTPUT);//ground pin
 pinMode(A6,OUTPUT);//ground pin
 pinMode(A5,OUTPUT);//ground pin
 digitalWrite(11,1);//set ir led to +5v
 digitalWrite(A5,1);//+5v 
 digitalWrite(A7,0);//GROUND 
 digitalWrite(A6,0);//GROUND 

}


 void printLetter(int letter[])
 {
 int y;
// printing the first y row of the letter
 for (y=0; y<8; y++)
 {
 digitalWrite(y+2, letter[y]);
 }
 delay(dotTime);
// printing the second y row of the letter
 for (y=0; y<8; y++)
 {
 digitalWrite(y+2, letter[y+8]);
 }
 delay(dotTime);
// printing the third y row of the letter
 for (y=0; y<8; y++)
 {
 digitalWrite(y+2, letter[y+16]);
 }
 delay(dotTime);
 for(y = 0; y<8; y++) {
 digitalWrite(y+2, letter[y+24]);
 }
 delay(dotTime);
for(y = 0; y<8; y++) {
 digitalWrite(y+2, letter[y+32]);
 }
 delay(dotTime);
 // printing the sspace between the letters
 for (y=0; y<8; y++)
 {
 digitalWrite(y+2, 0);
 }
 delay(letterSpace);
 }

 
 void loop()
{
  if(Serial.available())
  {    
       ch=Serial.read();
  
   Serial.println(char(ch));
     
     while(1)
     {
     if(digitalRead(12)==1)
      {
        //write whatever you would like to print inside
        delay(start_gap);
        printLetter (char(ch));
       }
       
     }
  } 
}
